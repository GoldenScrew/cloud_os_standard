/*!
 *  Bayrell Cloud Web Panel
 *
 *  (c) Copyright 2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace App;

use Runtime.lib;
use Runtime.Web.Annotations.Route;
use Runtime.Web.Annotations.RouteList;
use Runtime.Web.Component;
use Runtime.Web.LayoutModel;
use Runtime.Web.RenderContainer;
use Runtime.Web.RenderHelper;
use Runtime.Web.Response;
use Runtime.Web.Button.Button;
use Runtime.Web.Events.MouseClickEvent;


class Layout extends Component
{
	
	/**
	 * Returns module name
	 */
	pure string moduleName() => "Runtime.Web";
	
	
	
	/**
	 * Required components
	 */
	pure Collection<string> components() =>
	[
		classof Button,
	];
	
	
	
	/**
	 * Component css
	 */
	pure string css(Dict<string> vars) => 
		@css{
			*{box-sizing: border-box;}body{margin:0;padding:0;}
			%layout{
				height: 100%;
			}
			%layout_wrap{
				position: relative;
				height: 100vh;
				padding-bottom: 20px;
				display: flex;
				align-items: stretch;
			}
			%layout_footer{
				position: relative;
				font-size: 12px;
				height: 24px;
				margin-top: -24px;
			}
			%layout_footer .b_in{
			}
			%layout_menu_wrap{
				position: relative;
				width: 200px;
			}
			%layout_content_wrap{
				position: relative;
				width: calc(100% - 200px);
			}
			%layout_site_name, %layout_title_wrap{
				font-size: 16px;
				height: 40px;
			}
			%layout_site_name, %layout_title_wrap, %layout_page, %layout_content{
				padding: 10px;
			}
			%layout_title_wrap {
				display: flex;
				align-items: stretch;
			}
			%layout_title{
				width: 350px;
			}
			%layout_top_buttons{
				width: calc(100% - 350px);
			}
			%layout_content{
				position: relative;
				height: calc(100% - 40px);
				padding-bottom: 0;
				padding-right: 0;
			}
			%layout_menu_label{
				font-size: 14px;
				font-weight: bold;
				padding: 10px;
			}
			%layout_menu{
				position: relative;
				height: calc(100% - 40px);
				overflow-y: auto;
			}
			%layout_menu_items{}
			%layout_menu_items ul, %layout_menu_items li{
				padding: 0; margin: 0;
				list-style: none;
			}
			%layout_menu_items ul{}
			%layout_menu_items li{
				background-color: white;
			}
			%layout_menu_items li a{
				display: block;
				padding: 10px 15px;
				border-bottom: 1px solid #e7e7e7;
			}
			%layout_menu_items li.active > a, %layout_menu_items li.active > a:hover{
				background-color: #337ab7;
				border-color: #337ab7;
				color: white;
			}
		}
	;
	
	
	
	/**
	 * Component render
	 */
	pure html render(LayoutModel layout, LayoutModel model, Dict params, html content)
	{
		string class_name = model.page_class;
		
		return 
			<div @class='layout'>
				<div @class='layout_wrap'>
					<div @class='layout_menu_wrap'>
						
						<div @class='layout_site_name'>
							<a class='nolink' href='/'>{ _("App", "Docker web panel") }</a>
						</div>
						
						<div @class='layout_menu'>
							<div @class='layout_menu_label'>
								{ _("App", "Cluster") }
							</div>
							<div @class='layout_menu_items'>
								<ul>
									<li class={ rs::start(model.route.name, "app.index") ? "active": "" }>
										<a class='nolink' href='/'>{ _("App", "Dashboard") }</a>
									</li>
									<li class={ rs::start(model.route.name, "app.services") ? "active": "" }>
										<a class='nolink' href='/services/'>{ _("App", "Services") }</a>
									</li>
									<li class={ rs::start(model.route.name, "app.yaml") ? "active": "" }>
										<a class='nolink' href='/yaml/'>{ _("App", "Yaml") }</a>
									</li>
									<li class={ rs::start(model.route.name, "app.nginx") ? "active": "" }>
										<a class='nolink' href='/nginx/'>{ _("App", "Nginx") }</a>
									</li>
									<li class={ rs::start(model.route.name, "app.cli") ? "active": "" }>
										<a class='nolink' href='/cli/'>{ _("App", "CLI") }</a>
									</li>
								</ul>
							</div>
							
							<div @class='layout_menu_label'>
								{ _("App", "Admin") }
							</div>
							<div @class='layout_menu_items'>
								<ul>
									<li class={ rs::start(model.route.name, "app.users") ? "active": "" }>
										<a class='nolink' href='/'>{ _("App", "Users") }</a>
									</li>
								</ul>
							</div>
						</div>
						
					</div>
					<div @class='layout_content_wrap'>
						<div @class='layout_title_wrap'>
							<div @class='layout_title'>{ model.title }</div>
							<div @class='layout_top_buttons'>{ static::renderTopButtons(layout) }</div>
						</div>
						<div @class='layout_content'>
							<{class_name} @bind="page_model" @key="view"></{class_name}>
						</div>
					</div>
				</div>
				<div @class='layout_footer'>
					<div class='b_out'><div class='b_in'>
						{ "(c) BAYRELL Cloud OS 2020 \"Ildar Bikmamatov\" <support@bayrell.org>" }
					</div></div>
				</div>
			</div>
		;
	}
	
	
	/**
	 * Render Top Buttons
	 */
	pure html renderTopButtons(LayoutModel layout)
	{
		Collection<Dict> top_buttons = rtl::attr(layout, ["storage", "App.Layout.TopButtons"]);
		if (top_buttons == null) return "";
		return top_buttons.map
		(
			html (Dict button) use (layout) =>
				<Button @eventAsync:MouseClickEvent="onTopButtonClick" @tag={ button }>{ button["label"] }</Button>
		);
	}
	
	
	
	#ifdef FRONTEND then
	
	/**
	 * Top button click
	 */
	async void onTopButtonClick(MouseClickEvent e)
	{
		Dict tag = e["target"]["params"]["@tag"];
		string class_name = tag["component"];
		string method_name = tag["onClick"];
		Component c = this.driver.findComponents(class_name)[0];
		fn f = rtl::method(c, method_name);
		await f(e);
	}
	
	
	#endif
	
}