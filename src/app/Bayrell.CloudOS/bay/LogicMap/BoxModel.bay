/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.LogicMap;

use Runtime.lib;
use Runtime.BaseStruct;


struct BoxModel extends BaseStruct
{
	bool move = false;
	string kind = "";
	int x = 0;
	int y = 0;
	int shift_x = 0;
	int shift_y = 0;
	Dict item = null;
	
	
	
	/**
	 * Start move
	 */
	pure BoxModel startMove(BoxModel box, int shift_x = 0, int shift_y = 0) =>
		box.copy{ "move": true, "shift_x": shift_x, "shift_y": shift_y }
	;
	
	
	
	/**
	 * Stop move
	 */
	pure BoxModel stopMove(BoxModel box) => box.copy{ "move": false };
	
	
	
	/**
	 * Set pos
	 */
	pure BoxModel setPos(BoxModel box, int x, int y)
	{
		int new_x = x - box.shift_x;
		int new_y = y - box.shift_y;
		if (new_x < 0) new_x = 0;
		if (new_y < 0) new_y = 0;
		return box.copy{ "x": new_x, "y": new_y }
	}
	
	
	
	/**
	 * Set pos x
	 */
	pure BoxModel setPosX(BoxModel box, int x)
	{
		int new_x = x - box.shift_x;
		if (new_x < 0) new_x = 0;
		return box.copy{ "x": new_x }
	}
	
	
	
	/**
	 * Set pos y
	 */
	pure BoxModel setPosY(BoxModel box, int y)
	{
		int new_y = y - box.shift_y;
		if (new_y < 0) new_y = 0;
		return box.copy{ "y": new_y }
	}
}